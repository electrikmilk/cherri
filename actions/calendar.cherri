/*
Calendar Actions
*/

/* Calendar app */

enum eventDetail {
    'Start Date',
    'End Date',
    'Is All Day',
    'Calendar',
    'Location',
    'Has Alarms',
    'Duration',
    'Is Canceled',
    'My Status',
    'Organizer',
    'Organizer Is Me',
    'Attendees',
    'Number of Attendees',
    'URL',
    'Title',
    'Notes',
    'Attachments',
    'File Size',
    'File Extension',
    'Creation Date',
    'File Path',
    'Last Modified Date',
    'Name',
}

enum editEventDetail {
    'Start Date',
    'End Date',
    'Is All Day',
    'Location',
    'Duration',
    'My Status',
    'Attendees',
    'URL',
    'Title',
    'Notes',
    'Attachments',
}

// [Doc]: [Calendars] Add Calendar: Create a calendar with `name`.
#define action 'addnewcalendar' addCalendar(text name: 'CalendarName')

// [Doc]: [Calendars] Open Event in Calendar: Show `event` in the calendar app.
#define action showInCalendar(variable event: 'WFEvent')

// [Doc]: [Calendars] Edit Event: Edit a detail of an event. Provide an event, a detail to modify, and a new value for that detail.
#define action 'setters.calendarevents' editEvent(variable event: 'WFInput', editEventDetail detail: 'WFContentItemPropertyName', text newValue: 'WFCalendarEventContentItemStartDate')

// [Doc]: [Calendars] Get Event Detail: Get a detail of an event.
#define action 'properties.calendarevents' getEventDetail(variable event: 'WFInput', eventDetail detail: 'WFContentItemPropertyName')

// [Doc]: [Calendars] Remove Events: Remove an event.
#define action removeEvents(variable events: 'WFInputEvents', bool ?includeFutureEvents: 'WFCalendarIncludeFutureEvents' = false)

/* Reminders app */

// [Doc]: [Reminders] Open Reminders List
#define action 'showlist' openRemindersList(variable list: 'WFList')

// [Doc]: [Reminders] Remove Reminders
#define action removeReminders(variable reminders: 'WFInputReminders')

/* Clock app */

// [Doc]: [Alarms] Get Alarms: Returns all of the alarms on the device.
#define action 'com.apple.mobiletimer-framework.MobileTimerIntents.MTGetAlarmsIntent' getAlarms()

/* Dates */

#define action 'detect.date' getDates(variable input: 'WFInput'): array

#define action date(text date: 'WFDateActionDate') {
	"WFDateActionMode": "Specified Date"
}

#define action default 'date' currentDate() {
    "WFDateActionMode": "Current Date"
}

/* Date formatting */

enum dateFormats {
	'None',
	'Short',
	'Medium',
	'Long',
	'Relative',
	'RFC 2822',
	'ISO 8601',
	'Custom',
}

enum timeFormats {
	'None',
	'Short',
	'Medium',
	'Long',
	'Relative',
}

#define action default 'format.date' formatDate(variable date: 'WFDate', dateFormats ?dateFormat: 'WFDateFormatStyle' = "Short", text ?customDateFormat: 'WFDateFormat') {
	"WFTimeFormatStyle": "None"
}

#define action 'format.date' formatTime(variable time: 'WFDate', timeFormats ?timeFormat: 'WFTimeFormatStyle' = "Short") {
	"WFDateFormatStyle": "None"
}

#define action 'format.date' formatTimestamp(
    variable date: 'WFDate',
    dateFormats ?dateFormat: 'WFDateFormatStyle' = "Short",
    timeFormats ?timeFormat: 'WFTimeFormatStyle' = "Short"
)
