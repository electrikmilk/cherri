/*
Calendar Actions
*/

/* Calendar app */

enum eventDetail {
    'Start Date',
    'End Date',
    'Is All Day',
    'Calendar',
    'Location',
    'Has Alarms',
    'Duration',
    'Is Canceled',
    'My Status',
    'Organizer',
    'Organizer Is Me',
    'Attendees',
    'Number of Attendees',
    'URL',
    'Title',
    'Notes',
    'Attachments',
    'File Size',
    'File Extension',
    'Creation Date',
    'File Path',
    'Last Modified Date',
    'Name',
}

enum editEventDetail {
    'Start Date',
    'End Date',
    'Is All Day',
    'Location',
    'Duration',
    'My Status',
    'Attendees',
    'URL',
    'Title',
    'Notes',
    'Attachments',
}

#define action 'addnewcalendar' addCalendar(text name: 'CalendarName')

#define action showInCalendar(variable event: 'WFEvent')

#define action 'setters.calendarevents' editEvent(variable event: 'WFInput', editEventDetail detail: 'WFContentItemPropertyName', text newValue: 'WFCalendarEventContentItemStartDate')

#define action 'properties.calendarevents' getEventDetail(variable event: 'WFInput', eventDetail detail: 'WFContentItemPropertyName')

#define action removeEvents(variable events: 'WFInputEvents', bool ?includeFutureEvents: 'WFCalendarIncludeFutureEvents' = false)

/* Reminders app */

#define action 'showlist' openRemindersList(variable list: 'WFList')

#define action removeReminders(variable reminders: 'WFInputReminders')

/* Clock app */

#define action 'com.apple.mobiletimer-framework.MobileTimerIntents.MTGetAlarmsIntent' getAlarms()

/* Dates */

#define action 'detect.date' getDates(variable input: 'WFInput'): array

#define action date(text date: 'WFDateActionDate') {
	"WFDateActionMode": "Specified Date"
}

#define action default 'date' currentDate() {
    "WFDateActionMode": "Current Date"
}

/* Date formatting */

enum dateFormats {
	'None',
	'Short',
	'Medium',
	'Long',
	'Relative',
	'RFC 2822',
	'ISO 8601',
	'Custom',
}

enum timeFormats {
	'None',
	'Short',
	'Medium',
	'Long',
	'Relative',
}

#define action default 'format.date' formatDate(variable date: 'WFDate', dateFormats ?dateFormat: 'WFDateFormatStyle' = "Short", text ?customDateFormat: 'WFDateFormat') {
	"WFTimeFormatStyle": "None"
}

#define action 'format.date' formatTime(variable time: 'WFDate', timeFormats ?timeFormat: 'WFTimeFormatStyle' = "Short") {
	"WFDateFormatStyle": "None"
}

#define action 'format.date' formatTimestamp(
    variable date: 'WFDate',
    dateFormats ?dateFormat: 'WFDateFormatStyle' = "Short",
    timeFormats ?timeFormat: 'WFTimeFormatStyle' = "Short"
)
