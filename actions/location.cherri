/*
Location Actions
*/

// [Doc]: Get Current Location: Get current user location.
#define action 'location' getCurrentLocation() {
	"WFLocation": {
		"isCurrentLocation": true
	}
}

enum locationDetail {
    'Name',
    'URL',
    'Label',
    'Phone Number',
    'Region',
    'ZIP Code',
    'State',
    'City',
    'Street',
    'Altitude',
    'Longitude',
    'Latitude',
}

// [Doc]: Get Location Detail: Get a detail about a location.
#define action 'properties.locations' getLocationDetail(variable location: 'WFInput', locationDetail detail: 'WFContentItemPropertyName')

// [Doc]: [Addresses] Get Addresses: Get addresses from `input`.
#define action 'detect.address' getAddresses(variable input: 'WFInput')

// [Doc]: [Addresses] Street Address: Create a location value with an address.
#define action 'address' streetAddress(
    text addressLine2: 'WFAddressLine1',
    text addressLine2: 'WFAddressLine2',
    text city: 'WFCity',
    text state: 'WFState',
    text country: 'WFCountry',
    number zipCode: 'WFPostalCode'
)

// [Doc]: [Maps] Open in Maps: Open a location in maps.
#define action 'searchmaps' openInMaps(variable location: 'WFInput')

// [Doc]: [Maps] Get Maps Link: Get a link for a location.
#define action getMapsLink(variable location: 'WFInput')

// [Doc]: [Maps] Get Halfway Point: Get the halfway point between two locations.
#define action getHalfwayPoint(variable firstLocation: 'WFGetHalfwayPointFirstLocation', variable secondLocation: 'WFGetHalfwayPointSecondLocation')

// [Doc]: [Weather] Get Current Weather: Get the current weather for a location.
#define action 'weather.currentconditions' getCurrentWeather(text ?location: 'WFWeatherCustomLocation' = "Current Location")

enum weatherForecastTypes {
    'Daily',
    'Hourly',
}

// [Doc]: [Weather] Get Weather Forecast: Get various types of weather forecast for a location.
#define action 'weather.forecast' getWeatherForecast(weatherForecastTypes ?type: 'WFWeatherForecastType' = "Daily", text ?location: 'WFInput' = "Current Location")

enum weatherDetail {
	'Name',
	'Air Pollutants',
	'Air Quality Category',
	'Air Quality Index',
	'Sunset Time',
	'Sunrise Time',
	'UV Index',
	'Wind Direction',
	'Wind Speed',
	'Precipitation Chance',
	'Precipitation Amount',
	'Pressure',
	'Humidity',
	'Dewpoint',
	'Visibility',
	'Condition',
	'Feels Like',
	'Low',
	'High',
	'Temperature',
	'Location',
	'Date',
}

// [Doc]: [Weather] Get Weather Detail: Get a detail about a weather forecast.
#define action 'properties.weather.conditions' getWeatherDetail(variable weather: 'WFInput', weatherDetail detail: 'WFContentItemPropertyName')
